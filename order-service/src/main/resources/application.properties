spring.application.name=order-service


server.port = 8081


spring.h2.console.enabled=true
spring.datasource.url=jdbc:h2:mem:order-service
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=root
spring.datasource.password=password
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

eureka.client.serviceUrl.defaultZone = http://localhost:8761/eureka 

management.server.port = 8085
management.health.circuitbreaker.enable = true
management.endpoint.web.exposure.include = *
management.endpoint.health.show = always

resilience4j.circuitbreaker.instances.inventory.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.inventory.event-consumer-buffer-size=10
resilience4j.circuitbreaker.instances.inventory.slidingWindowType=COUNT_BASED
resilience4j.circuitbreaker.instances.inventory.slidingWindowSize=5
resilience4j.circuitbreaker.instances.inventory.failureRateThreshold=50
resilience4j.circuitbreaker.instances.inventory.waitDurationInOpenState=5s
resilience4j.circuitbreaker.instances.inventory.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.inventory.automaticTransitionFromOpenToHalfOpenEnabled=true


resilience4j.timelimiter.instance.inventory.timeout.duration = 3s

resilience4j.retry.instance.inventory.max-attempts = 3

resilience4j.retry.instance.inventory.wait-duration = 3

spring.zipkin.base-url = http://localhost:9411
spring.sleuth.sampler.probability=1.0


#kafks properties

spring.kafka.bootstrap-server = localhost:9092
spring.kafka.template.default.topic = notificationTopic

spring.kafka.producer.key-serializer = org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer = org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.type.mapping = event:com.project.order_service.Event.OrderPlacedEvent
